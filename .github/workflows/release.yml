name: Release

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag name (e.g. v1.0.0)'
        required: true

permissions:
  contents: write

env:
  PROJECT: ${{ github.event.repository.name }}

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24.2'

    - name: Build binary
      run: |
        mkdir -p dist
        output_name=${PROJECT}-${{ matrix.goos }}-${{ matrix.goarch }}
        if [ "${{ matrix.goos }}" == "windows" ]; then
          output_name="${output_name}.exe"
        fi
        GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o dist/$output_name ./src

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${PROJECT}-${{ matrix.goos }}-${{ matrix.goarch }}
        path: dist/*

  release:
    runs-on: ubuntu-latest
    needs: build
    environment: DOCKERHUB

    steps:
    - uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: dist

    - name: List downloaded files
      run: ls -R dist/

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ github.event.inputs.tag }}
        name: Release ${{ github.event.inputs.tag }}
        draft: false
        files: dist/**/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract version (without v)
      id: version
      run: |
        VERSION=${{ github.event.inputs.tag }}
        VERSION_CLEAN=${VERSION#v}
        echo "version=$VERSION_CLEAN" >> $GITHUB_OUTPUT

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build and Push Docker Image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        platforms: linux/amd64,linux/arm64
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.PROJECT }}:latest
          ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.PROJECT }}:${{ steps.version.outputs.version }}